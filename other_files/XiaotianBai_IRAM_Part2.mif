


-- NYU:Poly CS6133 Computer Architecture 
-- Instructor: Vikram Padman 

-- Modified by Xiaotian Bai for the Spring 2017 Midterm 
-- 
-- 
-- File format: 
-- Hex Address 3 hex nibbles (12 bits) : bit31 ...... bit0; 
WIDTH=32;
DEPTH=1024;
ADDRESS_RADIX=HEX;
DATA_RADIX=BIN;
CONTENT BEGIN
-------------------------------------------------------------------------- 
-- Overall program structure: 
-- r4 is our counter 
-- r1 is our increment/decrement 
-- r2 is our limit upwards 
-- r3 is used for accumulation, its value is 1
-- r0 is used for compare, its value is 0
--
-- 000 lw r0,0(r0) -- Load data memory 0 -> r0 
-- 001 lw r1,0(r0) -- Load data memory 0 -> r1 
-- 002 lw r4,0(r0) -- Load data memory 0 -> r4 
-- 003 lw r3,1(r0) -- Load data memory 1 -> r3 
-- 004 lw r2,2(r0) -- Load data memory 2 -> r2 
-- 005 add r1,r1,r3 -- Add 1 to r1 
-- 006 add r4,r1,r4 -- Add r1 to r4 
-- 007 out r4 -- Display the 8 least signifant bits through the LEDs 
-- 008 beq r1,r2,00A -- Branch if r1 reaches 20 
-- 009 beq r0,r0,005 -- Loop if r1 does not reach 20 
-- 00A out r0 -- Set LEDs to blink
-- 00B lw r2,1(r0) -- Load data memory 1 -> r2 
-- 00C sub r4,r4,r1 -- Count backwards 
-- 00D out r4 -- Display the 8 least signifant bits through the LEDs 
-- 00E sub r1,r1,r2 -- Subtract 1 from r1
-- 00F beq r1,r0,011 -- Branch if r1 reaches 0
-- 010 beq r0,r0,00C -- Loop if r1 does not reach 0
-- 011 out r0 -- Set LEDs to blink
------------------------------------------------------------------------------ 
--Hex Address : bit31...........bit15..........bit0; 
--    |             |                  |                 | 
     000      :     10001100000000000000000000000000;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                  op=lw, rs=0,rt=0,   offset=0 
--           lw r0,0(r0) -- Load data memory 0 -> r0 
     001      :     10001100000000010000000000000000;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                  op=lw, rs=0,rt=1,   offset=0 
--           lw r1,0(r0) -- Load data memory 0 -> r1 
     002      :     10001100000001000000000000000000;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                  op=lw, rs=0,rt=4,   offset=0 
--           lw r4,0(r0) -- Load data memory 0 -> r4  
     003      :     10001100000000110000000000000100;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                  op=lw, rs=0,rt=3,   offset=8 
--           lw r3,1(r0) -- Load data memory 1 -> r3  
     004      :     10001100000000100000000000001000;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                  op=lw, rs=0,rt=2,   offset=16 
--           lw r2,2(r0) -- Load data memory 2 -> r2 
     005      :     00000000001000110000100000100000;
--                  |____||___||___||___||___||____|
--                     |     |     |     |     |     |
--                  R-type,rs=1,rt=2,rd=3,---,f=add
--           add r1,r1,r3 -- Add 1 to r1 
     006      :     00000000001001000010000000100000;
--                  |____||___||___||___||___||____|
--                     |     |     |     |     |     |
--                  R-type,rs=1,rt=4,rd=4,---,f=add
--           add r4,r1,r4 -- Add r1 to r4  
     007      :     10110000100000000000000000000000;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                  op=out, rs=4,rt=0,   offset=0 
--     out r4 -- Display the 8 least signifant bits through the LEDs 
     008      :     00010000001000100000000000000001;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                op=beq, rs=1,rt=2,   offset=2 
--             beq r1,r2,00A -- Branch if r1 reaches 20  
     009      :     00010000000000001111111111111011;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                op=beq, rs=0,rt=0,   offset=-5 
--           beq r0,r0,005 -- Loop if r1 does not reach 20 
     00A      :     10110000000000000000000000000000;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                 op=out, rs=0,rt=0,   offset=0 
--                   out r0 -- Set LEDs to blink 
     00B      :     10001100000000100000000000000100;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                  op=lw, rs=0,rt=2,   offset=8 
--           lw r2,1(r0) -- Load data memory 1 -> r2  
     00C      :     00000000100000010010000000100010;
--                  |____||___||___||___||___||____|
--                     |     |     |     |     |     |
--                  R-type,rs=4,rt=1,rd=4,---,f=sub
--                 sub r4,r4,r1 -- Count backwards
     00D      :     10110000100000000000000000000000;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                 op=out, rs=4,rt=0,   offset=0 
--     out r4 -- Display the 8 least signifant bits through the LEDs 
     00E      :     00000000001000100000100000100010;
--                  |____||___||___||___||___||____|
--                     |     |     |     |     |     |
--                  R-type,rs=1,rt=2,rd=1,---,f=sub
--                sub r1,r1,r2 -- Subtract 1 from r1
     00F      :     00010000001000000000000000000001;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                op=beq, rs=1,rt=0,   offset=2 
--           beq r1,r0,011 -- Branch if r1 reaches 0 
     010      :     00010000000000001111111111111011;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                  op=lw, rs=0,rt=0,   offset=-5 
--        beq r0,r0,00C -- Loop if r1 does not reach 0
     011      :     10110000000000000000000000000000;
--                  |____||___||___||______________| 
--                     |     |     |            | 
--                 op=out, rs=0,rt=0,   offset=0 
--                   out r0 -- Set LEDs to blink
END;